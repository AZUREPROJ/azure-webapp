# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main


variables:
- group: kv-secrets

stages:
# Stage 1: Build
- stage: Build
  displayName: Build Spring Boot App
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      name: Default
    steps:
    - checkout: self

    - script: java -version
      displayName: 'Check Java version'

    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'Path'
        jdkDirectory: '$(JAVA_HOME)'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
      env:
        DB_USERNAME: $(DB-USER)
        DB_PASSWORD: $(DB-PASSWORD)

    # Rename JAR thành tên cố định app.jar (Windows agent dùng PowerShell)
    - powershell: |
        $jarFile = Get-ChildItem -Path target -Filter *.jar | Where-Object { $_.Name -notmatch "original" } | Select-Object -First 1
        Rename-Item -Path $jarFile.FullName -NewName "app.jar"
      displayName: 'Rename JAR to app.jar'

    # Publish JAR as pipeline artifact để dùng cho stage Deploy
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/target/app.jar'
        artifact: 'drop'
        publishLocation: 'pipeline'

# Stage 2: App Deploy
- stage: Deploy
  displayName: 'Deploy to Azure WebApp'
  condition: succeeded()
  jobs:
    - deployment: DeployWebApp
      displayName: 'Deploy Spring Boot JAR'
      environment: dopham-env
      pool:
        name: Default
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: drop

              - script: |
                  echo "Listing artifact content..."
                  dir "$(Pipeline.Workspace)/drop"
                displayName: "Verify downloaded artifact"

              # Set startup command cho Linux App Service
              # - task: AzureCLI@2
              #   inputs:
              #     azureSubscription: "dopham-sc"
              #     scriptType: "ps"
              #     scriptLocation: "inlineScript"
              #     inlineScript: |
              #       az webapp config set `
              #       --resource-group rg_fsa_f1_csm_ec_huutn `
              #       --name dopham-app `
              #       --startup-file "java -jar /home/site/wwwroot/app.jar"


              # Deploy artifact lên Azure App Service
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'dopham-sc'
                  appType: 'webAppLinux'
                  appName: 'dopv3-app'
                  package: '$(Pipeline.Workspace)/drop/app.jar'
                  runtimeStack: 'JAVA|17-java17'

              
